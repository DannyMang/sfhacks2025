{"ast":null,"code":"var _jsxFileName = \"/Users/danielung/Desktop/projects/sfhacks/react-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport WebcamView from './components/WebcamView';\nimport AvatarView from './components/AvatarView';\nimport ControlPanel from './components/ControlPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [connected, setConnected] = useState(false);\n  const [cameraActive, setCameraActive] = useState(false);\n  const [audioActive, setAudioActive] = useState(false);\n  const [latency, setLatency] = useState(0);\n  const [fps, setFps] = useState(0);\n  const [status, setStatus] = useState('Idle');\n  const [logs, setLogs] = useState(['System ready. Connect to WebSocket server to begin.']);\n  const websocketRef = useRef(null);\n  const mediaStreamRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const audioSourceRef = useRef(null);\n  const audioProcessorRef = useRef(null);\n  const videoIntervalRef = useRef(null);\n  const framesReceivedRef = useRef(0);\n  const fpsIntervalRef = useRef(null);\n  const webcamRef = useRef(null);\n  const avatarCanvasRef = useRef(null);\n\n  // Add a log message\n  const addLog = message => {\n    setLogs(prevLogs => {\n      const newLogs = [...prevLogs, message];\n      // Keep only the last 20 logs\n      return newLogs.slice(-20);\n    });\n  };\n\n  // Connect to WebSocket\n  const connectWebSocket = () => {\n    const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const wsHost = window.location.hostname;\n    const wsPort = 8000; // FastAPI server port\n    const wsUrl = `${wsProtocol}//${wsHost}:${wsPort}/ws/avatar`;\n    addLog(`Connecting to ${wsUrl}...`);\n    try {\n      const ws = new WebSocket(wsUrl);\n      ws.onopen = function (event) {\n        addLog('WebSocket connection established');\n        setConnected(true);\n        setStatus('Connected');\n        startFpsCounter();\n      };\n      ws.onmessage = function (event) {\n        const data = JSON.parse(event.data);\n        if (data.frame_data) {\n          renderAvatarFrame(data.frame_data);\n          if (data.latency) {\n            setLatency((data.latency * 1000).toFixed(1));\n          }\n          framesReceivedRef.current++;\n        }\n      };\n      ws.onerror = function (error) {\n        addLog(`WebSocket error: ${error}`);\n        setStatus('Error');\n      };\n      ws.onclose = function (event) {\n        addLog('WebSocket connection closed');\n        setConnected(false);\n        setStatus('Disconnected');\n        stopFpsCounter();\n      };\n      websocketRef.current = ws;\n    } catch (error) {\n      addLog(`Error connecting to WebSocket: ${error.message}`);\n    }\n  };\n\n  // Disconnect WebSocket\n  const disconnectWebSocket = () => {\n    if (websocketRef.current) {\n      websocketRef.current.close();\n      websocketRef.current = null;\n      setConnected(false);\n      stopSendingFrames();\n      addLog('WebSocket disconnected');\n    }\n  };\n\n  // Start webcam\n  const startWebcam = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 640\n          },\n          height: {\n            ideal: 480\n          },\n          frameRate: {\n            ideal: 30\n          }\n        }\n      });\n      mediaStreamRef.current = stream;\n      if (webcamRef.current) {\n        webcamRef.current.srcObject = stream;\n      }\n      setCameraActive(true);\n      startSendingFrames();\n      addLog('Webcam started');\n    } catch (error) {\n      addLog(`Error accessing webcam: ${error.message}`);\n    }\n  };\n\n  // Stop webcam\n  const stopWebcam = () => {\n    if (mediaStreamRef.current) {\n      stopSendingFrames();\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      if (webcamRef.current) {\n        webcamRef.current.srcObject = null;\n      }\n      mediaStreamRef.current = null;\n      setCameraActive(false);\n      addLog('Webcam stopped');\n    }\n  };\n\n  // Start audio\n  const startAudio = async () => {\n    try {\n      const audioStream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      audioSourceRef.current = audioContextRef.current.createMediaStreamSource(audioStream);\n      const bufferSize = 4096;\n      audioProcessorRef.current = audioContextRef.current.createScriptProcessor(bufferSize, 1, 1);\n      audioSourceRef.current.connect(audioProcessorRef.current);\n      audioProcessorRef.current.connect(audioContextRef.current.destination);\n      audioProcessorRef.current.onaudioprocess = function (event) {\n        if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\n          const inputData = event.inputBuffer.getChannelData(0);\n          const audio_data = btoa(String.fromCharCode.apply(null, new Uint8Array(inputData.buffer)));\n          websocketRef.current.send(JSON.stringify({\n            audio_data: audio_data,\n            sample_rate: audioContextRef.current.sampleRate\n          }));\n        }\n      };\n      setAudioActive(true);\n      addLog('Audio started');\n    } catch (error) {\n      addLog(`Error accessing microphone: ${error.message}`);\n    }\n  };\n\n  // Stop audio\n  const stopAudio = () => {\n    if (audioContextRef.current) {\n      if (audioProcessorRef.current) {\n        audioProcessorRef.current.disconnect();\n        audioProcessorRef.current = null;\n      }\n      if (audioSourceRef.current) {\n        audioSourceRef.current.disconnect();\n        audioSourceRef.current = null;\n      }\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n      setAudioActive(false);\n      addLog('Audio stopped');\n    }\n  };\n\n  // Start sending frames\n  const startSendingFrames = () => {\n    if (videoIntervalRef.current) return;\n    videoIntervalRef.current = setInterval(() => {\n      if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN && mediaStreamRef.current && webcamRef.current) {\n        const video = webcamRef.current;\n        const canvas = document.createElement('canvas');\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(video, 0, 0);\n        const imageData = canvas.toDataURL('image/jpeg', 0.8).split(',')[1];\n        websocketRef.current.send(JSON.stringify({\n          frame_data: imageData,\n          timestamp: Date.now()\n        }));\n      }\n    }, 33); // ~30 FPS\n  };\n\n  // Stop sending frames\n  const stopSendingFrames = () => {\n    if (videoIntervalRef.current) {\n      clearInterval(videoIntervalRef.current);\n      videoIntervalRef.current = null;\n    }\n  };\n\n  // Render avatar frame\n  const renderAvatarFrame = base64Data => {\n    if (!avatarCanvasRef.current) return;\n    const canvas = avatarCanvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.onload = function () {\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n    img.src = 'data:image/jpeg;base64,' + base64Data;\n  };\n\n  // FPS counter\n  const startFpsCounter = () => {\n    if (fpsIntervalRef.current) return;\n    fpsIntervalRef.current = setInterval(() => {\n      setFps(framesReceivedRef.current);\n      framesReceivedRef.current = 0;\n    }, 1000);\n  };\n\n  // Stop FPS counter\n  const stopFpsCounter = () => {\n    if (fpsIntervalRef.current) {\n      clearInterval(fpsIntervalRef.current);\n      fpsIntervalRef.current = null;\n      setFps(0);\n    }\n  };\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      stopWebcam();\n      stopAudio();\n      disconnectWebSocket();\n      stopFpsCounter();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Real-Time Avatar System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(WebcamView, {\n        webcamRef: webcamRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvatarView, {\n        canvasRef: avatarCanvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(ControlPanel, {\n        connected: connected,\n        cameraActive: cameraActive,\n        audioActive: audioActive,\n        latency: latency,\n        fps: fps,\n        status: status,\n        logs: logs,\n        onConnect: connectWebSocket,\n        onDisconnect: disconnectWebSocket,\n        onStartCamera: startWebcam,\n        onStopCamera: stopWebcam,\n        onStartAudio: startAudio,\n        onStopAudio: stopAudio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Real-Time Avatar System for Live Interviews | Hackathon Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"myIaGco80+wuUXE+pyY7wZRwF7o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","WebcamView","AvatarView","ControlPanel","jsxDEV","_jsxDEV","App","_s","connected","setConnected","cameraActive","setCameraActive","audioActive","setAudioActive","latency","setLatency","fps","setFps","status","setStatus","logs","setLogs","websocketRef","mediaStreamRef","audioContextRef","audioSourceRef","audioProcessorRef","videoIntervalRef","framesReceivedRef","fpsIntervalRef","webcamRef","avatarCanvasRef","addLog","message","prevLogs","newLogs","slice","connectWebSocket","wsProtocol","window","location","protocol","wsHost","hostname","wsPort","wsUrl","ws","WebSocket","onopen","event","startFpsCounter","onmessage","data","JSON","parse","frame_data","renderAvatarFrame","toFixed","current","onerror","error","onclose","stopFpsCounter","disconnectWebSocket","close","stopSendingFrames","startWebcam","stream","navigator","mediaDevices","getUserMedia","video","width","ideal","height","frameRate","srcObject","startSendingFrames","stopWebcam","getTracks","forEach","track","stop","startAudio","audioStream","audio","AudioContext","webkitAudioContext","createMediaStreamSource","bufferSize","createScriptProcessor","connect","destination","onaudioprocess","readyState","OPEN","inputData","inputBuffer","getChannelData","audio_data","btoa","String","fromCharCode","apply","Uint8Array","buffer","send","stringify","sample_rate","sampleRate","stopAudio","disconnect","setInterval","canvas","document","createElement","videoWidth","videoHeight","ctx","getContext","drawImage","imageData","toDataURL","split","timestamp","Date","now","clearInterval","base64Data","img","Image","onload","src","className","children","fileName","_jsxFileName","lineNumber","columnNumber","canvasRef","onConnect","onDisconnect","onStartCamera","onStopCamera","onStartAudio","onStopAudio","_c","$RefreshReg$"],"sources":["/Users/danielung/Desktop/projects/sfhacks/react-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport WebcamView from './components/WebcamView';\nimport AvatarView from './components/AvatarView';\nimport ControlPanel from './components/ControlPanel';\n\nfunction App() {\n  const [connected, setConnected] = useState(false);\n  const [cameraActive, setCameraActive] = useState(false);\n  const [audioActive, setAudioActive] = useState(false);\n  const [latency, setLatency] = useState(0);\n  const [fps, setFps] = useState(0);\n  const [status, setStatus] = useState('Idle');\n  const [logs, setLogs] = useState(['System ready. Connect to WebSocket server to begin.']);\n  \n  const websocketRef = useRef(null);\n  const mediaStreamRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const audioSourceRef = useRef(null);\n  const audioProcessorRef = useRef(null);\n  const videoIntervalRef = useRef(null);\n  const framesReceivedRef = useRef(0);\n  const fpsIntervalRef = useRef(null);\n  const webcamRef = useRef(null);\n  const avatarCanvasRef = useRef(null);\n  \n  // Add a log message\n  const addLog = (message) => {\n    setLogs(prevLogs => {\n      const newLogs = [...prevLogs, message];\n      // Keep only the last 20 logs\n      return newLogs.slice(-20);\n    });\n  };\n  \n  // Connect to WebSocket\n  const connectWebSocket = () => {\n    const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const wsHost = window.location.hostname;\n    const wsPort = 8000; // FastAPI server port\n    const wsUrl = `${wsProtocol}//${wsHost}:${wsPort}/ws/avatar`;\n    \n    addLog(`Connecting to ${wsUrl}...`);\n    \n    try {\n      const ws = new WebSocket(wsUrl);\n      \n      ws.onopen = function(event) {\n        addLog('WebSocket connection established');\n        setConnected(true);\n        setStatus('Connected');\n        startFpsCounter();\n      };\n      \n      ws.onmessage = function(event) {\n        const data = JSON.parse(event.data);\n        \n        if (data.frame_data) {\n          renderAvatarFrame(data.frame_data);\n          if (data.latency) {\n            setLatency((data.latency * 1000).toFixed(1));\n          }\n          framesReceivedRef.current++;\n        }\n      };\n      \n      ws.onerror = function(error) {\n        addLog(`WebSocket error: ${error}`);\n        setStatus('Error');\n      };\n      \n      ws.onclose = function(event) {\n        addLog('WebSocket connection closed');\n        setConnected(false);\n        setStatus('Disconnected');\n        stopFpsCounter();\n      };\n      \n      websocketRef.current = ws;\n    } catch (error) {\n      addLog(`Error connecting to WebSocket: ${error.message}`);\n    }\n  };\n  \n  // Disconnect WebSocket\n  const disconnectWebSocket = () => {\n    if (websocketRef.current) {\n      websocketRef.current.close();\n      websocketRef.current = null;\n      setConnected(false);\n      stopSendingFrames();\n      addLog('WebSocket disconnected');\n    }\n  };\n  \n  // Start webcam\n  const startWebcam = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        video: { \n          width: { ideal: 640 },\n          height: { ideal: 480 },\n          frameRate: { ideal: 30 }\n        } \n      });\n      \n      mediaStreamRef.current = stream;\n      if (webcamRef.current) {\n        webcamRef.current.srcObject = stream;\n      }\n      \n      setCameraActive(true);\n      startSendingFrames();\n      addLog('Webcam started');\n    } catch (error) {\n      addLog(`Error accessing webcam: ${error.message}`);\n    }\n  };\n  \n  // Stop webcam\n  const stopWebcam = () => {\n    if (mediaStreamRef.current) {\n      stopSendingFrames();\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      if (webcamRef.current) {\n        webcamRef.current.srcObject = null;\n      }\n      mediaStreamRef.current = null;\n      setCameraActive(false);\n      addLog('Webcam stopped');\n    }\n  };\n  \n  // Start audio\n  const startAudio = async () => {\n    try {\n      const audioStream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      audioSourceRef.current = audioContextRef.current.createMediaStreamSource(audioStream);\n      \n      const bufferSize = 4096;\n      audioProcessorRef.current = audioContextRef.current.createScriptProcessor(bufferSize, 1, 1);\n      \n      audioSourceRef.current.connect(audioProcessorRef.current);\n      audioProcessorRef.current.connect(audioContextRef.current.destination);\n      \n      audioProcessorRef.current.onaudioprocess = function(event) {\n        if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\n          const inputData = event.inputBuffer.getChannelData(0);\n          const audio_data = btoa(String.fromCharCode.apply(null, new Uint8Array(inputData.buffer)));\n          \n          websocketRef.current.send(JSON.stringify({\n            audio_data: audio_data,\n            sample_rate: audioContextRef.current.sampleRate\n          }));\n        }\n      };\n      \n      setAudioActive(true);\n      addLog('Audio started');\n    } catch (error) {\n      addLog(`Error accessing microphone: ${error.message}`);\n    }\n  };\n  \n  // Stop audio\n  const stopAudio = () => {\n    if (audioContextRef.current) {\n      if (audioProcessorRef.current) {\n        audioProcessorRef.current.disconnect();\n        audioProcessorRef.current = null;\n      }\n      \n      if (audioSourceRef.current) {\n        audioSourceRef.current.disconnect();\n        audioSourceRef.current = null;\n      }\n      \n      audioContextRef.current.close();\n      audioContextRef.current = null;\n      setAudioActive(false);\n      addLog('Audio stopped');\n    }\n  };\n  \n  // Start sending frames\n  const startSendingFrames = () => {\n    if (videoIntervalRef.current) return;\n    \n    videoIntervalRef.current = setInterval(() => {\n      if (websocketRef.current && \n          websocketRef.current.readyState === WebSocket.OPEN && \n          mediaStreamRef.current &&\n          webcamRef.current) {\n        \n        const video = webcamRef.current;\n        const canvas = document.createElement('canvas');\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const ctx = canvas.getContext('2d');\n        \n        ctx.drawImage(video, 0, 0);\n        const imageData = canvas.toDataURL('image/jpeg', 0.8).split(',')[1];\n        \n        websocketRef.current.send(JSON.stringify({\n          frame_data: imageData,\n          timestamp: Date.now()\n        }));\n      }\n    }, 33); // ~30 FPS\n  };\n  \n  // Stop sending frames\n  const stopSendingFrames = () => {\n    if (videoIntervalRef.current) {\n      clearInterval(videoIntervalRef.current);\n      videoIntervalRef.current = null;\n    }\n  };\n  \n  // Render avatar frame\n  const renderAvatarFrame = (base64Data) => {\n    if (!avatarCanvasRef.current) return;\n    \n    const canvas = avatarCanvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    const img = new Image();\n    img.onload = function() {\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n    img.src = 'data:image/jpeg;base64,' + base64Data;\n  };\n  \n  // FPS counter\n  const startFpsCounter = () => {\n    if (fpsIntervalRef.current) return;\n    \n    fpsIntervalRef.current = setInterval(() => {\n      setFps(framesReceivedRef.current);\n      framesReceivedRef.current = 0;\n    }, 1000);\n  };\n  \n  // Stop FPS counter\n  const stopFpsCounter = () => {\n    if (fpsIntervalRef.current) {\n      clearInterval(fpsIntervalRef.current);\n      fpsIntervalRef.current = null;\n      setFps(0);\n    }\n  };\n  \n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      stopWebcam();\n      stopAudio();\n      disconnectWebSocket();\n      stopFpsCounter();\n    };\n  }, []);\n  \n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Real-Time Avatar System</h1>\n      </header>\n      \n      <div className=\"container\">\n        <WebcamView webcamRef={webcamRef} />\n        <AvatarView canvasRef={avatarCanvasRef} />\n      </div>\n      \n      <div className=\"container\">\n        <ControlPanel \n          connected={connected}\n          cameraActive={cameraActive}\n          audioActive={audioActive}\n          latency={latency}\n          fps={fps}\n          status={status}\n          logs={logs}\n          onConnect={connectWebSocket}\n          onDisconnect={disconnectWebSocket}\n          onStartCamera={startWebcam}\n          onStopCamera={stopWebcam}\n          onStartAudio={startAudio}\n          onStopAudio={stopAudio}\n        />\n      </div>\n      \n      <footer className=\"footer\">\n        <p>Real-Time Avatar System for Live Interviews | Hackathon Project</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}